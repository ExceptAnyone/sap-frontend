{"ast":null,"code":"var _jsxFileName = \"/Users/jangjeong-an/sap-frontend/src/components/PwForm.js\";\nimport React, { useState } from 'react';\nimport PwCheckForm from './PwCheckForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PwForm({\n  pw,\n  setPw,\n  pwValid,\n  setPwValid,\n  pwCheck,\n  setPwCheck,\n  pwMatch,\n  setPwMatch\n}) {\n  // const [pw, setPw] = useState(\"\");\n  // const [pwValid, setPwValid] = useState(false);\n  // const [pwCheck, setPwCheck] = useState(\"\");\n  // const [pwMatch, setPwMatch] = useState(true);\n\n  const handlePwChange = e => {\n    setPw(e.target.value);\n    const regex = /^(?=.*[a-zA-Z])(?=.*[@$!%*?&])(?=.*[0-9]).{8,25}$/; //영문,숫자,특수문자 포함 8자리 이상\n    // /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{10,}$/;\n\n    if (regex.test(pw)) {\n      setPwValid(true);\n    } else {\n      setPwValid(false);\n    }\n    setPwMatch(pw === pwCheck); // 비밀번호 일치여부 확인\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password\",\n      children: [\"\\uBE44\\uBC00\\uBC88\\uD638 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"passwordInput\",\n        type: \"password\",\n        placeholder: \"\\uC601\\uBB38, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uC870\\uD569 8\\uC790\\uC774\\uC0C1\",\n        value: pw,\n        onChange: handlePwChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorPw\",\n      children: !pwValid && pw.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 8\\uC790 \\uC774\\uC0C1\\uC774\\uC5B4\\uC57C \\uD558\\uBA70, \\uC22B\\uC790/\\uC601\\uBB38/\\uD2B9\\uC218\\uBB38\\uC790\\uB97C \\uBAA8\\uB450 \\uD3EC\\uD568\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = PwForm;\nvar _c;\n$RefreshReg$(_c, \"PwForm\");","map":{"version":3,"names":["React","useState","PwCheckForm","jsxDEV","_jsxDEV","PwForm","pw","setPw","pwValid","setPwValid","pwCheck","setPwCheck","pwMatch","setPwMatch","handlePwChange","e","target","value","regex","test","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","length","_c","$RefreshReg$"],"sources":["/Users/jangjeong-an/sap-frontend/src/components/PwForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport PwCheckForm from './PwCheckForm';\n\nexport default function PwForm({ pw, setPw, pwValid, setPwValid, pwCheck, setPwCheck, pwMatch, setPwMatch}) {\n\n    // const [pw, setPw] = useState(\"\");\n    // const [pwValid, setPwValid] = useState(false);\n    // const [pwCheck, setPwCheck] = useState(\"\");\n    // const [pwMatch, setPwMatch] = useState(true);\n\n    const handlePwChange = (e) => {\n        setPw(e.target.value);\n        const regex =\n          /^(?=.*[a-zA-Z])(?=.*[@$!%*?&])(?=.*[0-9]).{8,25}$/ //영문,숫자,특수문자 포함 8자리 이상\n          // /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{10,}$/;\n    \n        if (regex.test(pw)) {\n          setPwValid(true);\n        } else {\n          setPwValid(false);\n        }\n    \n        setPwMatch(pw === pwCheck); // 비밀번호 일치여부 확인\n      };\n    \n\n  return (\n    <div>\n        <div className=\"password\">\n        비밀번호 <br />\n        <input\n          className=\"passwordInput\"\n          type=\"password\"\n          placeholder=\"영문, 숫자, 특수문자 조합 8자이상\"\n          value={pw}\n          onChange={handlePwChange}\n        />\n      </div>\n\n      <div className=\"errorPw\">\n        {!pwValid && pw.length > 0 && (\n          <div>\n            비밀번호는 8자 이상이어야 하며, 숫자/영문/특수문자를 모두\n            포함해야 합니다.\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,MAAMA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,OAAO;EAAEC,UAAU;EAAEC,OAAO;EAAEC,UAAU;EAAEC,OAAO;EAAEC;AAAU,CAAC,EAAE;EAExG;EACA;EACA;EACA;;EAEA,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC1BR,KAAK,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACrB,MAAMC,KAAK,GACT,mDAAmD,EAAC;IACpD;;IAEF,IAAIA,KAAK,CAACC,IAAI,CAACb,EAAE,CAAC,EAAE;MAClBG,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;IAEAI,UAAU,CAACP,EAAE,KAAKI,OAAO,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAGL,oBACEN,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAKiB,SAAS,EAAC,UAAU;MAAAD,QAAA,GAAC,2BACrB,eAAAhB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACXrB,OAAA;QACEiB,SAAS,EAAC,eAAe;QACzBK,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,uFAAsB;QAClCV,KAAK,EAAEX,EAAG;QACVsB,QAAQ,EAAEd;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrB,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAD,QAAA,EACrB,CAACZ,OAAO,IAAIF,EAAE,CAACuB,MAAM,GAAG,CAAC,iBACxBzB,OAAA;QAAAgB,QAAA,EAAK;MAGL;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACK,EAAA,GA9CuBzB,MAAM;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}